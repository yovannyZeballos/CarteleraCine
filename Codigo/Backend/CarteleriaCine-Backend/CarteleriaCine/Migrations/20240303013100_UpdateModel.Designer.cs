// <auto-generated />
using System;
using CarteleriaCine.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarteleriaCine.Migrations
{
    [DbContext(typeof(CarteleriaContexto))]
    [Migration("20240303013100_UpdateModel")]
    partial class UpdateModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarteleriaCine.Model.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("Date");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("CarteleriaCine.Model.GeneroPelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("GeneroPeliculas");
                });

            modelBuilder.Entity("CarteleriaCine.Model.HorarioPelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("HoraFin")
                        .IsRequired()
                        .HasColumnType("char(5)");

                    b.Property<string>("HoraInicio")
                        .IsRequired()
                        .HasColumnType("char(5)");

                    b.Property<int>("PeliculaId")
                        .HasColumnType("int");

                    b.Property<int>("SalaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PeliculaId");

                    b.HasIndex("SalaId");

                    b.ToTable("HorarioPelicula");
                });

            modelBuilder.Entity("CarteleriaCine.Model.Pelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<string>("Sinopsis")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UrlImagen")
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.ToTable("Pelicula");
                });

            modelBuilder.Entity("CarteleriaCine.Model.ReservaPelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("SalaPeliculaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("SalaPeliculaId");

                    b.ToTable("ReservaPelicula");
                });

            modelBuilder.Entity("CarteleriaCine.Model.SalaPelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EntradasDisponibles")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SalaPelicula");
                });

            modelBuilder.Entity("CarteleriaCine.Model.TipoDocumentoIdentidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoDocumentoIdentidad");
                });

            modelBuilder.Entity("CarteleriaCine.Model.Cliente", b =>
                {
                    b.HasOne("CarteleriaCine.Model.TipoDocumentoIdentidad", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("CarteleriaCine.Model.HorarioPelicula", b =>
                {
                    b.HasOne("CarteleriaCine.Model.Pelicula", "Pelicula")
                        .WithMany("HorariosPelicula")
                        .HasForeignKey("PeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarteleriaCine.Model.SalaPelicula", "Sala")
                        .WithMany("HorarioPeliculas")
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pelicula");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("CarteleriaCine.Model.Pelicula", b =>
                {
                    b.HasOne("CarteleriaCine.Model.GeneroPelicula", "Genero")
                        .WithMany("Peliculas")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("CarteleriaCine.Model.ReservaPelicula", b =>
                {
                    b.HasOne("CarteleriaCine.Model.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarteleriaCine.Model.SalaPelicula", "SalaPelicula")
                        .WithMany()
                        .HasForeignKey("SalaPeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("SalaPelicula");
                });

            modelBuilder.Entity("CarteleriaCine.Model.GeneroPelicula", b =>
                {
                    b.Navigation("Peliculas");
                });

            modelBuilder.Entity("CarteleriaCine.Model.Pelicula", b =>
                {
                    b.Navigation("HorariosPelicula");
                });

            modelBuilder.Entity("CarteleriaCine.Model.SalaPelicula", b =>
                {
                    b.Navigation("HorarioPeliculas");
                });
#pragma warning restore 612, 618
        }
    }
}
